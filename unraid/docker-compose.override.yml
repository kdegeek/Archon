version: '3.9'

# Unraid-specific overrides for the base docker-compose.yml
# This file works in conjunction with the base configuration

services:
  archon-server:
    volumes:
      - ${APPDATA_PATH}/server:/appdata
      - ${DATA_PATH}:/data
      - ${APPDATA_PATH}/logs/server:/logs
    environment:
      - PUID=${PUID:-99}
      - PGID=${PGID:-100}
      - TZ=${TZ:-America/New_York}
    user: "${PUID:-99}:${PGID:-100}"
    restart: unless-stopped
    # Deploy blocks are ignored by Docker Compose - use mem_limit/cpus instead
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '${SERVER_CPU_LIMIT:-2}'
    #       memory: ${SERVER_MEMORY_LIMIT:-2G}
    #     reservations:
    #       cpus: '${SERVER_CPU_RESERVE:-0.5}'
    #       memory: ${SERVER_MEMORY_RESERVE:-512M}
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE:-10m}"
        max-file: "${LOG_MAX_FILE:-3}"
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import sys,urllib.request; urllib.request.urlopen(\"http://localhost:8181/health\"); sys.exit(0)' || command -v curl >/dev/null && curl -fsS http://localhost:8181/health || (command -v wget >/dev/null && wget --spider -q http://localhost:8181/health) || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 40s

  archon-mcp:
    volumes:
      - ${APPDATA_PATH}/mcp:/appdata
      - ${DATA_PATH}:/data
      - ${APPDATA_PATH}/logs/mcp:/logs
      - ./scripts/wait-for-http.sh:/wait-for-http.sh:ro
    environment:
      - PUID=${PUID:-99}
      - PGID=${PGID:-100}
      - TZ=${TZ:-America/New_York}
    user: "${PUID:-99}:${PGID:-100}"
    restart: unless-stopped
    command: ["/bin/sh", "-c", "/wait-for-http.sh http://archon-server:8181/health && exec python -m src.mcp.main"]
    # Deploy blocks are ignored by Docker Compose - use mem_limit/cpus instead
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '${MCP_CPU_LIMIT:-1}'
    #       memory: ${MCP_MEMORY_LIMIT:-1G}
    #     reservations:
    #       cpus: '${MCP_CPU_RESERVE:-0.25}'
    #       memory: ${MCP_MEMORY_RESERVE:-256M}
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE:-10m}"
        max-file: "${LOG_MAX_FILE:-3}"
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import sys,urllib.request; urllib.request.urlopen(\"http://localhost:8051/health\"); sys.exit(0)' || command -v curl >/dev/null && curl -fsS http://localhost:8051/health || (command -v wget >/dev/null && wget --spider -q http://localhost:8051/health) || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 30s

  archon-agents:
    volumes:
      - ${APPDATA_PATH}/agents:/appdata
      - ${DATA_PATH}:/data
      - ${APPDATA_PATH}/logs/agents:/logs
      - ./scripts/wait-for-http.sh:/wait-for-http.sh:ro
    environment:
      - PUID=${PUID:-99}
      - PGID=${PGID:-100}
      - TZ=${TZ:-America/New_York}
    user: "${PUID:-99}:${PGID:-100}"
    restart: unless-stopped
    command: ["/bin/sh", "-c", "/wait-for-http.sh http://archon-server:8181/health && exec python -m src.agents.main"]
    # Deploy blocks are ignored by Docker Compose - use mem_limit/cpus instead
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '${AGENTS_CPU_LIMIT:-2}'
    #       memory: ${AGENTS_MEMORY_LIMIT:-2G}
    #     reservations:
    #       cpus: '${AGENTS_CPU_RESERVE:-0.5}'
    #       memory: ${AGENTS_MEMORY_RESERVE:-512M}
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE:-10m}"
        max-file: "${LOG_MAX_FILE:-3}"
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import sys,urllib.request; urllib.request.urlopen(\"http://localhost:8052/health\"); sys.exit(0)' || command -v curl >/dev/null && curl -fsS http://localhost:8052/health || (command -v wget >/dev/null && wget --spider -q http://localhost:8052/health) || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 30s

  archon-frontend:
    volumes:
      - ${APPDATA_PATH}/frontend:/appdata
      - ${APPDATA_PATH}/logs/frontend:/logs
      - ./scripts/wait-for-http.sh:/wait-for-http.sh:ro
    environment:
      - PUID=${PUID:-99}
      - PGID=${PGID:-100}
      - TZ=${TZ:-America/New_York}
      # Runtime configuration for frontend connections
      # These override the default internal Docker network addresses
      # Uncomment and modify if accessing from outside the Docker network
      # - VITE_API_URL=http://your-unraid-ip:8181
      # - VITE_MCP_URL=http://your-unraid-ip:8051
      # - VITE_AGENTS_URL=http://your-unraid-ip:8052
    restart: unless-stopped
    command: ["/bin/sh", "-c", "/wait-for-http.sh http://archon-server:8181/health && /wait-for-http.sh http://archon-mcp:8051/health && /wait-for-http.sh http://archon-agents:8052/health && exec nginx -g 'daemon off;'"]
    # Deploy blocks are ignored by Docker Compose - use mem_limit/cpus instead
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '${FRONTEND_CPU_LIMIT:-1}'
    #       memory: ${FRONTEND_MEMORY_LIMIT:-512M}
    #     reservations:
    #       cpus: '${FRONTEND_CPU_RESERVE:-0.25}'
    #       memory: ${FRONTEND_MEMORY_RESERVE:-128M}
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE:-10m}"
        max-file: "${LOG_MAX_FILE:-3}"
    healthcheck:
      test: ["CMD-SHELL", "busybox wget --spider -q http://localhost/ || command -v curl >/dev/null && curl -fsS http://localhost/ || (command -v wget >/dev/null && wget --spider -q http://localhost/) || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 20s

